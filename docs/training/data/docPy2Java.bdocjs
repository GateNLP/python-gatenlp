{"annotation_sets": {"Set1": {"name": "Set1", "annotations": [{"type": "Annot1", "start": 0, "end": 4, "id": 0, "features": {"feature1_key": "feature1_value"}}, {"type": "Token", "start": 0, "end": 4, "id": 1, "features": {"kind": "token1'"}}, {"type": "Token", "start": 5, "end": 7, "id": 2, "features": {"kind": "token2'"}}, {"type": "Token", "start": 8, "end": 9, "id": 3, "features": {"kind": "token3'"}}, {"type": "Token", "start": 10, "end": 14, "id": 4, "features": {"kind": "token4'"}}, {"type": "Token", "start": 15, "end": 24, "id": 5, "features": {"kind": "token5"}}, {"type": "Sentence", "start": 0, "end": 24, "id": 6, "features": {"what": "The first 'sentence' annotation"}}], "next_annid": 7}, "": {"name": "", "annotations": [{"type": "PyToken", "start": 0, "end": 4, "id": 0, "features": {}}, {"type": "PyToken", "start": 5, "end": 7, "id": 1, "features": {}}, {"type": "PyToken", "start": 8, "end": 9, "id": 2, "features": {}}, {"type": "PyToken", "start": 10, "end": 14, "id": 3, "features": {}}, {"type": "PyToken", "start": 15, "end": 24, "id": 4, "features": {}}, {"type": "PyToken", "start": 26, "end": 28, "id": 5, "features": {}}, {"type": "PyToken", "start": 29, "end": 37, "id": 6, "features": {}}, {"type": "PyToken", "start": 38, "end": 42, "id": 7, "features": {}}, {"type": "PyToken", "start": 43, "end": 44, "id": 8, "features": {}}, {"type": "PyToken", "start": 45, "end": 48, "id": 9, "features": {}}, {"type": "PyToken", "start": 49, "end": 59, "id": 10, "features": {}}, {"type": "PyToken", "start": 61, "end": 65, "id": 11, "features": {}}, {"type": "PyToken", "start": 66, "end": 68, "id": 12, "features": {}}, {"type": "PyToken", "start": 69, "end": 70, "id": 13, "features": {}}, {"type": "PyToken", "start": 71, "end": 79, "id": 14, "features": {}}, {"type": "PyToken", "start": 80, "end": 84, "id": 15, "features": {}}, {"type": "PyToken", "start": 85, "end": 93, "id": 16, "features": {}}, {"type": "PyToken", "start": 94, "end": 95, "id": 17, "features": {}}, {"type": "PyToken", "start": 96, "end": 99, "id": 18, "features": {}}, {"type": "PyToken", "start": 100, "end": 105, "id": 19, "features": {}}, {"type": "PyToken", "start": 106, "end": 114, "id": 20, "features": {}}, {"type": "PyToken", "start": 115, "end": 119, "id": 21, "features": {}}, {"type": "PyToken", "start": 121, "end": 124, "id": 22, "features": {}}, {"type": "PyToken", "start": 125, "end": 132, "id": 23, "features": {}}, {"type": "PyToken", "start": 133, "end": 139, "id": 24, "features": {}}, {"type": "PyToken", "start": 140, "end": 145, "id": 25, "features": {}}, {"type": "PyToken", "start": 146, "end": 148, "id": 26, "features": {}}, {"type": "PyToken", "start": 149, "end": 155, "id": 27, "features": {}}, {"type": "PyToken", "start": 156, "end": 159, "id": 28, "features": {}}, {"type": "PyToken", "start": 160, "end": 163, "id": 29, "features": {}}, {"type": "PyToken", "start": 164, "end": 169, "id": 30, "features": {}}, {"type": "PyToken", "start": 169, "end": 170, "id": 31, "features": {}}, {"type": "PyToken", "start": 171, "end": 180, "id": 32, "features": {}}, {"type": "PyToken", "start": 181, "end": 185, "id": 33, "features": {}}, {"type": "PyToken", "start": 186, "end": 189, "id": 34, "features": {}}, {"type": "PyToken", "start": 190, "end": 194, "id": 35, "features": {}}, {"type": "PyToken", "start": 195, "end": 199, "id": 36, "features": {}}, {"type": "PyToken", "start": 199, "end": 200, "id": 37, "features": {}}, {"type": "PyToken", "start": 201, "end": 207, "id": 38, "features": {}}, {"type": "PyToken", "start": 208, "end": 210, "id": 39, "features": {}}, {"type": "PyToken", "start": 211, "end": 218, "id": 40, "features": {}}, {"type": "PyToken", "start": 219, "end": 221, "id": 41, "features": {}}, {"type": "PyToken", "start": 222, "end": 231, "id": 42, "features": {}}, {"type": "PyToken", "start": 232, "end": 236, "id": 43, "features": {}}, {"type": "PyToken", "start": 238, "end": 244, "id": 44, "features": {}}, {"type": "PyToken", "start": 244, "end": 245, "id": 45, "features": {}}, {"type": "PyToken", "start": 246, "end": 255, "id": 46, "features": {}}, {"type": "PyToken", "start": 256, "end": 258, "id": 47, "features": {}}, {"type": "PyToken", "start": 259, "end": 266, "id": 48, "features": {}}, {"type": "PyToken", "start": 267, "end": 270, "id": 49, "features": {}}, {"type": "PyToken", "start": 271, "end": 275, "id": 50, "features": {}}, {"type": "PyToken", "start": 276, "end": 278, "id": 51, "features": {}}, {"type": "PyToken", "start": 279, "end": 285, "id": 52, "features": {}}, {"type": "PyToken", "start": 286, "end": 291, "id": 53, "features": {}}, {"type": "PyToken", "start": 291, "end": 292, "id": 54, "features": {}}, {"type": "PyToken", "start": 293, "end": 295, "id": 55, "features": {}}, {"type": "PyToken", "start": 296, "end": 299, "id": 56, "features": {}}, {"type": "PyToken", "start": 300, "end": 303, "id": 57, "features": {}}, {"type": "PyToken", "start": 304, "end": 306, "id": 58, "features": {}}, {"type": "PyToken", "start": 307, "end": 310, "id": 59, "features": {}}, {"type": "PyToken", "start": 311, "end": 315, "id": 60, "features": {}}, {"type": "PyToken", "start": 316, "end": 319, "id": 61, "features": {}}, {"type": "PyToken", "start": 320, "end": 321, "id": 62, "features": {}}, {"type": "PyToken", "start": 321, "end": 322, "id": 63, "features": {}}, {"type": "PyToken", "start": 324, "end": 328, "id": 64, "features": {}}, {"type": "PyToken", "start": 329, "end": 332, "id": 65, "features": {}}, {"type": "PyToken", "start": 333, "end": 338, "id": 66, "features": {}}, {"type": "PyToken", "start": 339, "end": 346, "id": 67, "features": {}}, {"type": "PyToken", "start": 347, "end": 350, "id": 68, "features": {}}, {"type": "PyToken", "start": 351, "end": 355, "id": 69, "features": {}}, {"type": "PyToken", "start": 356, "end": 362, "id": 70, "features": {}}, {"type": "PyToken", "start": 363, "end": 367, "id": 71, "features": {}}, {"type": "PyToken", "start": 368, "end": 371, "id": 72, "features": {}}, {"type": "PyToken", "start": 372, "end": 384, "id": 73, "features": {}}, {"type": "PyToken", "start": 385, "end": 392, "id": 74, "features": {}}, {"type": "PyToken", "start": 392, "end": 393, "id": 75, "features": {}}, {"type": "PyToken", "start": 394, "end": 399, "id": 76, "features": {}}, {"type": "PyToken", "start": 400, "end": 402, "id": 77, "features": {}}, {"type": "PyToken", "start": 403, "end": 407, "id": 78, "features": {}}, {"type": "PyToken", "start": 408, "end": 410, "id": 79, "features": {}}, {"type": "PyToken", "start": 411, "end": 416, "id": 80, "features": {}}, {"type": "PyToken", "start": 417, "end": 421, "id": 81, "features": {}}, {"type": "PyToken", "start": 421, "end": 422, "id": 82, "features": {}}, {"type": "PyToken", "start": 424, "end": 428, "id": 83, "features": {}}, {"type": "PyToken", "start": 429, "end": 431, "id": 84, "features": {}}, {"type": "PyToken", "start": 432, "end": 439, "id": 85, "features": {}}, {"type": "PyToken", "start": 440, "end": 441, "id": 86, "features": {}}, {"type": "PyToken", "start": 442, "end": 445, "id": 87, "features": {}}, {"type": "PyToken", "start": 446, "end": 451, "id": 88, "features": {}}, {"type": "PyToken", "start": 451, "end": 452, "id": 89, "features": {}}, {"type": "PyToken", "start": 452, "end": 487, "id": 90, "features": {}}, {"type": "PyToken", "start": 489, "end": 492, "id": 91, "features": {}}, {"type": "PyToken", "start": 493, "end": 494, "id": 92, "features": {}}, {"type": "PyToken", "start": 495, "end": 499, "id": 93, "features": {}}, {"type": "PyToken", "start": 500, "end": 505, "id": 94, "features": {}}, {"type": "PyToken", "start": 506, "end": 513, "id": 95, "features": {}}, {"type": "PyToken", "start": 514, "end": 522, "id": 96, "features": {}}, {"type": "PyToken", "start": 522, "end": 523, "id": 97, "features": {}}, {"type": "PyToken", "start": 523, "end": 540, "id": 98, "features": {}}, {"type": "PyToken", "start": 541, "end": 543, "id": 99, "features": {}}, {"type": "PyToken", "start": 544, "end": 548, "id": 100, "features": {}}, {"type": "PyToken", "start": 550, "end": 552, "id": 101, "features": {}}, {"type": "PyToken", "start": 553, "end": 554, "id": 102, "features": {}}, {"type": "PyToken", "start": 554, "end": 558, "id": 103, "features": {}}, {"type": "PyToken", "start": 559, "end": 560, "id": 104, "features": {}}, {"type": "PyToken", "start": 560, "end": 564, "id": 105, "features": {}}, {"type": "PyToken", "start": 565, "end": 566, "id": 106, "features": {}}, {"type": "PyToken", "start": 566, "end": 573, "id": 107, "features": {}}, {"type": "PyToken", "start": 574, "end": 577, "id": 108, "features": {}}, {"type": "PyToken", "start": 578, "end": 579, "id": 109, "features": {}}, {"type": "PyToken", "start": 580, "end": 585, "id": 110, "features": {}}, {"type": "PyToken", "start": 586, "end": 588, "id": 111, "features": {}}, {"type": "PyToken", "start": 589, "end": 595, "id": 112, "features": {}}, {"type": "PyToken", "start": 596, "end": 600, "id": 113, "features": {}}, {"type": "PyToken", "start": 601, "end": 602, "id": 114, "features": {}}, {"type": "PyToken", "start": 603, "end": 604, "id": 115, "features": {}}, {"type": "PyToken", "start": 604, "end": 605, "id": 116, "features": {}}, {"type": "PyToken", "start": 606, "end": 613, "id": 117, "features": {}}, {"type": "PyToken", "start": 614, "end": 617, "id": 118, "features": {}}, {"type": "PyToken", "start": 617, "end": 618, "id": 119, "features": {}}, {"type": "PyToken", "start": 618, "end": 619, "id": 120, "features": {}}, {"type": "PyToken", "start": 620, "end": 623, "id": 121, "features": {}}, {"type": "PyToken", "start": 624, "end": 625, "id": 122, "features": {}}, {"type": "PyToken", "start": 625, "end": 626, "id": 123, "features": {}}, {"type": "PyToken", "start": 627, "end": 632, "id": 124, "features": {}}, {"type": "PyToken", "start": 633, "end": 640, "id": 125, "features": {}}, {"type": "PyToken", "start": 640, "end": 641, "id": 126, "features": {}}, {"type": "PyToken", "start": 641, "end": 642, "id": 127, "features": {}}, {"type": "PyToken", "start": 643, "end": 644, "id": 128, "features": {}}, {"type": "PyToken", "start": 645, "end": 646, "id": 129, "features": {}}, {"type": "PyToken", "start": 646, "end": 649, "id": 130, "features": {}}, {"type": "PyToken", "start": 649, "end": 650, "id": 131, "features": {}}, {"type": "PyToken", "start": 650, "end": 651, "id": 132, "features": {}}, {"type": "PyToken", "start": 653, "end": 654, "id": 133, "features": {}}, {"type": "PyToken", "start": 655, "end": 656, "id": 134, "features": {}}, {"type": "PyToken", "start": 656, "end": 657, "id": 135, "features": {}}, {"type": "PyToken", "start": 658, "end": 664, "id": 136, "features": {}}, {"type": "PyToken", "start": 665, "end": 673, "id": 137, "features": {}}, {"type": "PyToken", "start": 673, "end": 674, "id": 138, "features": {}}, {"type": "PyToken", "start": 674, "end": 675, "id": 139, "features": {}}, {"type": "PyToken", "start": 678, "end": 682, "id": 140, "features": {}}, {"type": "PyToken", "start": 683, "end": 685, "id": 141, "features": {}}, {"type": "PyToken", "start": 686, "end": 690, "id": 142, "features": {}}, {"type": "PyToken", "start": 691, "end": 692, "id": 143, "features": {}}, {"type": "PyToken", "start": 693, "end": 696, "id": 144, "features": {}}, {"type": "PyToken", "start": 697, "end": 706, "id": 145, "features": {}}, {"type": "PyToken", "start": 707, "end": 714, "id": 146, "features": {}}, {"type": "PyToken", "start": 714, "end": 715, "id": 147, "features": {}}, {"type": "PyToken", "start": 716, "end": 720, "id": 148, "features": {}}, {"type": "PyToken", "start": 721, "end": 727, "id": 149, "features": {}}, {"type": "PyToken", "start": 728, "end": 730, "id": 150, "features": {}}, {"type": "PyToken", "start": 731, "end": 733, "id": 151, "features": {}}, {"type": "PyToken", "start": 735, "end": 745, "id": 152, "features": {}}, {"type": "PyToken", "start": 746, "end": 751, "id": 153, "features": {}}, {"type": "PyToken", "start": 752, "end": 754, "id": 154, "features": {}}, {"type": "PyToken", "start": 755, "end": 757, "id": 155, "features": {}}, {"type": "PyToken", "start": 758, "end": 763, "id": 156, "features": {}}, {"type": "PyToken", "start": 764, "end": 769, "id": 157, "features": {}}, {"type": "PyToken", "start": 770, "end": 773, "id": 158, "features": {}}, {"type": "PyToken", "start": 774, "end": 780, "id": 159, "features": {}}, {"type": "PyToken", "start": 781, "end": 782, "id": 160, "features": {}}, {"type": "PyToken", "start": 782, "end": 797, "id": 161, "features": {}}, {"type": "PyToken", "start": 797, "end": 798, "id": 162, "features": {}}, {"type": "PyToken", "start": 799, "end": 804, "id": 163, "features": {}}, {"type": "PyToken", "start": 805, "end": 809, "id": 164, "features": {}}, {"type": "PyToken", "start": 810, "end": 814, "id": 165, "features": {}}, {"type": "PyToken", "start": 815, "end": 820, "id": 166, "features": {}}, {"type": "PyToken", "start": 821, "end": 823, "id": 167, "features": {}}, {"type": "PyToken", "start": 824, "end": 828, "id": 168, "features": {}}, {"type": "PyToken", "start": 828, "end": 829, "id": 169, "features": {}}, {"type": "MP", "start": 333, "end": 338, "id": 170, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 338, "id": 171, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 338, "id": 172, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 346, "id": 173, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 346, "id": 174, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 346, "id": 175, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "Leader", "start": 333, "end": 346, "id": 176, "features": {"majorType": "person", "minorType": "leader", "name": "Boris Johnson", "inst": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "twitter_handle": "BorisJohnson"}}, {"type": "Candidate", "start": 333, "end": 346, "id": 177, "features": {"majorType": "person", "minorType": "candidate2019", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "gender": "male", "dbpedia": "http://dbpedia.org/page/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/page/Uxbridge_and_South_Ruislip", "twitter_id": "3131144855"}}, {"type": "Candidate", "start": 333, "end": 346, "id": 178, "features": {"majorType": "person", "minorType": "candidate2017", "name": "Boris Johnson", "inst": "http://nesta.org.uk/inst/candidate/2017/4546", "twitter_handle": "BorisJohnson", "dbpedia": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/resource/Uxbridge_and_South_Ruislip_(UK_Parliament_constituency)"}}, {"type": "MP", "start": 351, "end": 355, "id": 179, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 351, "end": 355, "id": 180, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 351, "end": 355, "id": 181, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 372, "end": 384, "id": 182, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 372, "end": 384, "id": 183, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 372, "end": 384, "id": 184, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "Leader", "start": 372, "end": 384, "id": 185, "features": {"majorType": "person", "minorType": "leader", "name": "Boris Johnson", "inst": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "twitter_handle": "BorisJohnson"}}, {"type": "Candidate", "start": 372, "end": 384, "id": 186, "features": {"majorType": "person", "minorType": "candidate2019", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "gender": "male", "dbpedia": "http://dbpedia.org/page/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/page/Uxbridge_and_South_Ruislip", "twitter_id": "3131144855"}}, {"type": "Candidate", "start": 372, "end": 384, "id": 187, "features": {"majorType": "person", "minorType": "candidate2017", "name": "Boris Johnson", "inst": "http://nesta.org.uk/inst/candidate/2017/4546", "twitter_handle": "BorisJohnson", "dbpedia": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/resource/Uxbridge_and_South_Ruislip_(UK_Parliament_constituency)"}}, {"type": "MP", "start": 333, "end": 338, "id": 188, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 338, "id": 189, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 338, "id": 190, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 346, "id": 191, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 346, "id": 192, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 333, "end": 346, "id": 193, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "Leader", "start": 333, "end": 346, "id": 194, "features": {"majorType": "person", "minorType": "leader", "name": "Boris Johnson", "inst": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "twitter_handle": "BorisJohnson"}}, {"type": "Candidate", "start": 333, "end": 346, "id": 195, "features": {"majorType": "person", "minorType": "candidate2019", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "gender": "male", "dbpedia": "http://dbpedia.org/page/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/page/Uxbridge_and_South_Ruislip", "twitter_id": "3131144855"}}, {"type": "Candidate", "start": 333, "end": 346, "id": 196, "features": {"majorType": "person", "minorType": "candidate2017", "name": "Boris Johnson", "inst": "http://nesta.org.uk/inst/candidate/2017/4546", "twitter_handle": "BorisJohnson", "dbpedia": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/resource/Uxbridge_and_South_Ruislip_(UK_Parliament_constituency)"}}, {"type": "MP", "start": 351, "end": 355, "id": 197, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 351, "end": 355, "id": 198, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 351, "end": 355, "id": 199, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 372, "end": 384, "id": 200, "features": {"majorType": "person", "minorType": "mp58", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 372, "end": 384, "id": 201, "features": {"majorType": "person", "minorType": "mp57", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "MP", "start": 372, "end": 384, "id": 202, "features": {"majorType": "person", "minorType": "mp56", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "twitter_id": "3131144855", "gender": "male", "ethnicity": "white", "orientation": "straight", "constituency": "Uxbridge and South Ruislip", "party": "Conservative Party"}}, {"type": "Leader", "start": 372, "end": 384, "id": 203, "features": {"majorType": "person", "minorType": "leader", "name": "Boris Johnson", "inst": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "twitter_handle": "BorisJohnson"}}, {"type": "Candidate", "start": 372, "end": 384, "id": 204, "features": {"majorType": "person", "minorType": "candidate2019", "name": "Boris Johnson", "twitter_handle": "BorisJohnson", "gender": "male", "dbpedia": "http://dbpedia.org/page/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/page/Uxbridge_and_South_Ruislip", "twitter_id": "3131144855"}}, {"type": "Candidate", "start": 372, "end": 384, "id": 205, "features": {"majorType": "person", "minorType": "candidate2017", "name": "Boris Johnson", "inst": "http://nesta.org.uk/inst/candidate/2017/4546", "twitter_handle": "BorisJohnson", "dbpedia": "http://dbpedia.org/resource/Boris_Johnson", "party": "Conservative Party", "constituency": "Uxbridge and South Ruislip", "constituency_uri": "http://dbpedia.org/resource/Uxbridge_and_South_Ruislip_(UK_Parliament_constituency)"}}, {"type": "PyLookup", "start": 133, "end": 145, "id": 206, "features": {"url": "https://en.wikipedia.org/wiki/Barack_Obama", "kind": "name_surname"}}, {"type": "PyLookup", "start": 140, "end": 145, "id": 207, "features": {"url": "https://en.wikipedia.org/wiki/Barack_Obama", "kind": "surname"}}, {"type": "PyLookup", "start": 279, "end": 291, "id": 208, "features": {"url": "https://en.wikipedia.org/wiki/Donald_Trump", "kind": "name_surname"}}], "next_annid": 209}}, "text": "This is a test document.\n\nIt contains just a few sentences. \nHere is a sentence that mentions a few named entities like \nthe persons Barack Obama or Ursula von der Leyen, locations\nlike New York City, Vienna or Beijing or companies like \nGoogle, UniCredit or Huawei. And here is Donald Trump, it may not be the real one :P\n\nLets say Boris Johnson aka Bojo tweets from his BorisJohnson account, would be nice to match them!\n\nHere we include a URL https://gatenlp.github.io/python-gatenlp/ \nand a fake email address john.doe@hiscoolserver.com as well \nas #some #cool #hastags and a bunch of emojis like \ud83d\ude3d (a kissing cat),\n\ud83d\udc69\u200d\ud83c\udfeb (a woman teacher), \ud83e\uddec (DNA), \n\ud83e\uddd7 (a person climbing), \n\nHere we test a few different scripts, e.g. Hangul \ud55c\uae00 or \nsimplified Hanzi \u6c49\u5b57 or Farsi \u0641\u0627\u0631\u0633\u06cc and Arabic ,\u0627\u064e\u0644\u0652\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u064f, which goes from right to left.\n\n", "features": {"loaded_from": "Local file system.", "loading_date": "2020-12-03 17:48:04.812151", "purpose": "Testing gatenlp.", "numeric_value": 22, "dict_of_objects": {"dict_key": "dict_value", "a_list": [1, 2, 3, 4, 5]}}, "offset_type": "p", "name": ""}